#!/usr/bin/env python
# -*- coding: utf-8 -*-

import time
from neopixel import *
from flask import Flask, render_template, request
app = Flask(__name__)

# LED strip configuration:
LED_COUNT   = 60      # Number of LED pixels.
LED_PIN     = 18      # GPIO pin connected to the pixels (must support PWM!).
LED_FREQ_HZ = 800000  # LED signal frequency in hertz (usually 800khz)
LED_DMA     = 5       # DMA channel to use for generating signal (try 5)
LED_BRIGHTNESS = 255
LED_INVERT  = False   # True to invert the signal (when using NPN transistor level shift)

# Define functions which animate LEDs in various ways.
def colorWipe(strip, color, wait_ms=50):
	"""Wipe color across display a pixel at a time."""
	for i in range(strip.numPixels()):
		strip.setPixelColor(LED_COUNT/2-i, color)
		strip.setPixelColor(LED_COUNT/2+1+i, color)
		strip.show()
		time.sleep(wait_ms/1000.0)

# Create NeoPixel object with appropriate configuration.
strip = Adafruit_NeoPixel(LED_COUNT, LED_PIN, LED_FREQ_HZ, LED_DMA, LED_INVERT)
# Intialize the library (must be called once before other functions).
strip.begin()

@app.route("/colorWipe/<r>/<g>/<b>/<wait>")
def action(r, g, b, wait):
	r = int(r)
	g = int(g)
	b = int(b)
	wait = int(wait)
	colorWipe(strip, Color(g, r, b), wait)
	return 'Done.\n'

@app.route("/theatreChase/<r1>/<g1>/<b1>/and/<r2>/<g2>/<b2>")
def theatreChase(r1, g1, b1, r2, g2, b2):
	r1 = int(r1)
	r2 = int(r2)
	g1 = int(g1)
	g2 = int(g2)
	b1 = int(b1)
	b2 = int(b2)
	index = 0
	for i in range(strip.numPixels()):
		if (i+index)%3==0:
			strip.setPixelColor(i, Color(r1, g1, b1))
		else:
			strip.setPixelColor(i, Color(r2, g2, b2))
		strip.show()
		index = index + 1

@app.route("/fadeFrom/<fr>/<fg>/<fb>/to/<tr>/<tg>/<tb>/wait/<wait>")
def fadeColor(fr, fg, fb, tr, tg, tb, wait):
	fr = int(fr)
	fg = int(fg)
	fb = int(fb)
	tr = int(tr)
	tg = int(tg)
	tb = int(tb) 
	wait = int(wait)
	rd = True
	gd = True
	bd = True
	while rd or gd or bd:
		if fr == tr:
			rd = False
		if fr < tr and rd:
			fr = fr + 1
		elif fr > tr and rd:
			fr = fr - 1

		if fg == tg:
			gd = False
		elif fg < tg and gd:
			fg = fg + 1
		elif fg > tg and gd:
			fg = fg - 1

		if fb == tb:
			bd = False
		elif fb < tb and bd:
			fb = fb + 1
		elif fb > tb and bd:
			fb = fb - 1
		print(str(fr)+" "+str(fg)+" "+str(fb))
		colorWipe(strip, Color(fg, fr, fb), 0)
		time.sleep(wait/1000.0)
	return 'Done.\n'

@app.route("/sunrise/<wait>")
def sunrise(wait):
	wait = int(wait)
	fadeColor(0, 0, 0, 255, 0, 0, wait)
	fadeColor(255, 0, 0, 255, 255, 0, wait)
	fadeColor(255, 255, 0, 45, 255, 0, wait)
	fadeColor(45, 255, 0, 0, 0, 255, wait)
	fadeColor(0, 0, 255, 131, 0, 181, wait)
	return 'Done.\n'

@app.route("/flash/<r1>/<g1>/<b1>/<r2>/<g2>/<b2>/<duration>")
def flash(r1, g1, b1, r2, g2, b2, duration):
	r1 = int(r1)
	g1 = int(g1)
	b1 = int(b1)
	r2 = int(r2)
	g2 = int(g2)
	b2 = int(b2)
	duration = int(duration)/2
	for i in range(duration):
		colorWipe(strip, Color(g1, r1, b1), 10)
		time.sleep(1)
		colorWipe(strip, Color(g2, r2, b2), 10)
		time.sleep(1)
	return 'Done.\n'

if __name__ == "__main__":
	app.run(host='0.0.0.0', port=80, debug=True)
